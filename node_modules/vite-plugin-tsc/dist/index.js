import { spawn } from "child_process";
/**
 * @example
 * import tscPlugin from "vite-plugin-tsc"
 *
 * export default {
 *   plugins: [tscPlugin()],
 *
 *   // Not required, but recommended.
 *   logLevel: "silent",
 * }
 */
export default function tscPlugin(option = {}) {
    let viteCommand;
    let tsc;
    const { tscCommand = "npx tsc" } = option;
    return {
        name: "vite-plugin-tsc",
        configResolved(config) {
            viteCommand = config.command;
        },
        buildStart() {
            if (tsc)
                return;
            switch (viteCommand) {
                case "build": {
                    tsc = spawnTsc(tscCommand);
                    tsc.once("exit", (tscExitCode) => {
                        // success
                        if (tscExitCode === null || tscExitCode === 0)
                            return;
                        // bail now because it may not be a compile error but cli error
                        if (tscExitCode === 1) {
                            process.exit(tscExitCode);
                        }
                        // awaits build finish
                        process.once("exit", () => {
                            console.error("Compile failed");
                            process.exit(tscExitCode);
                        });
                    });
                    break;
                }
                case "serve": {
                    tsc = spawnTsc(tscCommand, "--watch");
                    tsc.once("exit", (tscExitCode) => {
                        // success
                        if (tscExitCode === null || tscExitCode === 0)
                            return;
                        // bail now because it may not be a compile error
                        process.exit(tscExitCode);
                    });
                    break;
                }
            }
        },
        buildEnd() {
            if (!tsc)
                return;
            switch (viteCommand) {
                case "build": {
                    // do nothing
                    break;
                }
                case "serve": {
                    tsc.kill();
                    break;
                }
            }
        },
    };
}
/**
 * @example
 * spawnTsc("npx tsc")              // npx tsc --pretty --noEmit
 * spawnTsc("npx tsc", "--watch")   // npx tsc --pretty --noEmit --watch
 */
function spawnTsc(command, args = "") {
    return spawn(`${command} --pretty --noEmit ${args}`, [], {
        stdio: "inherit",
        shell: true,
    });
}
